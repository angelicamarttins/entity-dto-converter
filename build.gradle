plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.0'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'me.champeau.jmh' version '0.7.2'
  id 'checkstyle'
}

group = 'com.examples'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(23)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
  implementation 'org.mapstruct:mapstruct:1.6.3'
  implementation 'org.openjdk.jmh:jmh-core:1.37'

  runtimeOnly 'com.h2database:h2'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
  annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

checkstyle {
  toolVersion '10.15.0'
  ignoreFailures = false
  maxWarnings = 0
  maxErrors = 0
}

jmh {
  warmupIterations = 2
  iterations = 5
  fork = 1
}
